@inject IJSRuntime js

<GenericList List="Movies" SetShowDeleteButton="SetShowDeleteButton">
    <ElementTemplate Context="movie">
        <IndividualMovie Movie="movie" showDeleteButton="showDeleteButton" DeleteMovie="HandleDeleteAsync" />
    </ElementTemplate>
</GenericList>



@code {
    [Parameter]
    public List<Movie> Movies { get; set; }

    public bool showDeleteButton { get; set; } = true;

    private async Task HandleDeleteAsync(Movie movieToDelete)
    {
        await js.MyFunction("Custom Message from c# to js");
        var confirmed = await js.Confirm($"Are you sure you want to delete {movieToDelete.Title}");
        if (confirmed)
        {
            Console.WriteLine($"{movieToDelete.Title} Deleted FROM EventCallback");
            Movies.Remove(movieToDelete);
        }
    }

    protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized. Movies.Count =" + (Movies == null ? "" : Movies.Count.ToString()));
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParametersSet. Movies.Count =" + (Movies == null ? "" : Movies.Count.ToString()));
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine("OnAfterRender. firstRender =" + firstRender.ToString());
    }

    protected override bool ShouldRender()
    {
        return true;
    }

    private void SetShowDeleteButton(bool value)
    {
        showDeleteButton = value;
    }


}


