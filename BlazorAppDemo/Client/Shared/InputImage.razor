@using System.IO
@using Tewr.Blazor.FileReader
@inject IFileReaderService inj_fileReaderService

<div>
    <label>@Label</label>
    <input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg,.jpeg,.png" />
</div>
<div>
    @if (imageBase64 != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="data:image/jpeg;base64, @imageBase64" style="width: 400px" />
            </div>
        </div>
    }

    @if (ImageUrl != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="@ImageUrl" style="width: 400px" />
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public string Label { get; set; } = "Image";
    [Parameter] public string ImageUrl { get; set; }
    [Parameter] public EventCallback<string> OnSelectedImage { get; set; }
    private string imageBase64;
    private ElementReference inputElement;

    async Task ImageFileSelected()
    {
        foreach (var file in await inj_fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                Byte[] imageBytes = new Byte[memoryStream.Length];
                memoryStream.Read(imageBytes, 0, (int)memoryStream.Length);
                imageBase64 = Convert.ToBase64String(imageBytes);
                await OnSelectedImage.InvokeAsync(imageBase64);
                ImageUrl = null;
                StateHasChanged();
            }
        }
    }

}
